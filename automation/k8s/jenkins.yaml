apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
  labels:
    name: jenkins
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins
  namespace: jenkins
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: jenkins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: jenkins
roleRef:
  kind: ClusterRole
  name: jenkins
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: jenkins
  labels: 
    app: jenkins
  namespace: jenkins
spec:
  serviceAccountName: jenkins
  securityContext:
    fsGroup: 1000
  containers:
    - name: jenkins
      securityContext:
        runAsUser: 1000
      image: jenkins/jenkins:latest
      ports:
      - containerPort: 8080
      volumeMounts:
        - mountPath: "/var/jenkins_home"
          name: jenkins
        - mountPath: "/var/run/docker.sock"
          name: docker-socket
      readinessProbe:
        httpGet:
          path: /whoAmI/
          port: 8080
  volumes:
    - name: jenkins
      persistentVolumeClaim:
        claimName: jenkins
    - name: docker-socket
      hostPath:
        path: /var/run/docker.sock
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
spec:
  selector:
    app: jenkins
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: NodePort
---
apiVersion: networking.gke.io/v1beta1
kind: ManagedCertificate
metadata:
  name: jenkins
  namespace: jenkins
spec:
  domains:
    - jenkins.qa-portal.co.uk
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins
  annotations:
    kubernetes.io/ingress.global-static-ip-name: jenkins
    networking.gke.io/managed-certificates: jenkins  
    kubernetes.io/ingress.allow-http: "false"
  namespace: jenkins
spec:
  rules:
    - host: jenkins.qa-portal.co.uk
      http:
        paths:
          - path: /
            backend:
              serviceName: jenkins
              servicePort: 8080
          - path: /*
            backend:
              serviceName: jenkins
              servicePort: 8080
---

